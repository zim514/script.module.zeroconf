name: Release version

on:
  push:
    tags:
      - v*

jobs:
  kodi-addon-checker:
    runs-on: ubuntu-latest
    name: Kodi addon checker
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Kodi addon checker validation
      id: kodi-addon-checker
      uses: xbmc/action-kodi-addon-checker@discovery.2
      with:
        kodi-version: matrix
        addon-id: ${{ github.event.repository.name }}


  release:
    name: Build and release addon
    if: github.repository == 'zim514/script.module.zeroconf'
    runs-on: ubuntu-latest
    needs: kodi-addon-checker

    steps:
      - name: Get version
        id: get_version
        run: |
          echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install pipenv
          pip install git+https://github.com/romanvm/kodi-addon-submitter.git
          pipenv install --dev

      - name: Build zip
        id: build_zip
        run: |
          pipenv run submit-addon -z -s script.module.zeroconf
          ls *.zip
          echo "::set-output name=zip_filename::$(ls *.zip)"

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@discovery.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{steps.get_version.outputs.version}}
          draft: false
          prerelease: false

      - name: Upload Addon zip to github release
        id: upload-release-asset
        uses: actions/upload-release-asset@discovery.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.build_zip.outputs.zip_filename }}
          asset_name: ${{ steps.build_zip.outputs.zip_filename }}
          asset_content_type: application/zip
